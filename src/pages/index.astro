---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Welcome to Astro.">
  <h1 class="text-4xl font-semibold p-10 text-center">
    Prueba cambiar colores con imagenes
  </h1>
  <!-- imagenes con inputs -->
  <main
    class="flex flex-col lg:flex-row justify-center gap-20 border-b border-b-gray-800 pb-10"
  >
    <!-- color mas prominente -->
    <div class="text-center flex flex-col gap-2">
      <h2 class="text-2xl">Color mas prominente</h2>
      <img id="img" src="spotify.png" alt="" class="w-96 rounded m-auto" />
      <div class="flex gap-2">
        <input type="file" accept="image/*" id="image-input" />
        <div id="color" class="m-auto p-3 rounded text-white primary">
          color principal
        </div>
      </div>
    </div>
    <!-- color promedio -->
    <div class="text-center flex flex-col gap-2">
      <h2 class="text-2xl">Color promedio</h2>
      <img id="img2" src="twitter.png" alt="" class="w-96 m-auto" />
      <div class="flex gap-2">
        <input type="file" accept="image/*" id="image-input-avg" />
        <div id="color4" class="m-auto p-3 rounded text-white secundary">
          color Promedio
        </div>
      </div>
    </div>
  </main>
  <!-- pruebas -->
  <h2 class="text-3xl font-semibold text-center p-10">Prueba clases</h2>
  <div class="flex flex-col md:flex-row gap-3">
    <button
      class="w-40 m-auto py-3 rounded-md shadow-md font-semibold primary mb-10"
      >Iniciar sesi√≥n</button
    >
    <button
      class="w-40 m-auto py-3 rounded-md shadow-md font-semibold secundary mb-10"
      >Crear cuenta</button
    >
  </div>
</Layout>

<script>
  import ChromeTheme from "chrome-theme";
  const themePrimary = new ChromeTheme('spotify.png', 'primary');
  themePrimary.getMainColor()

  const themeSecundary = new ChromeTheme('twitter.png', 'secundary');
  themeSecundary.getAverageColor()


// inputs dinamicos
  const imageElement = document.getElementById("img") as HTMLImageElement;
  const inputElement = document.getElementById("image-input");

  inputElement.addEventListener("change", function () {
    if (
    inputElement instanceof HTMLInputElement &&
    inputElement.files &&
    inputElement.files[0]
  ) {
    // Get the selected file (should be an image)
    const selectedFile = inputElement.files[0];

    // Create a FileReader to read the selected image
    const reader = new FileReader();

    // Set up the FileReader onload event to update the image src when the file is read
    reader.onload = function (event) {
      const src: string = event.target.result as string;
      imageElement.src = src;
    };

    // Read the selected file as a data URL (base64 encoded string)
    reader.readAsDataURL(selectedFile);
    }
    setTimeout(async () => {
      themePrimary.setImg(imageElement.src);
      themePrimary.getMainColor();
    }, 100);


  
  });

  const imageElementSec = document.getElementById("img2") as HTMLImageElement;
  const inputElementSec = document.getElementById("image-input-avg");

  inputElementSec.addEventListener("change", function () {
    if (
    inputElementSec instanceof HTMLInputElement &&
    inputElementSec.files &&
    inputElementSec.files[0]
  ) {
    // Get the selected file (should be an image)
    const selectedFile = inputElementSec.files[0];

    // Create a FileReader to read the selected image
    const reader = new FileReader();

    // Set up the FileReader onload event to update the image src when the file is read
    reader.onload = function (event) {
      const src: string = event.target.result as string;
      imageElementSec.src = src;
    };

    // Read the selected file as a data URL (base64 encoded string)
    reader.readAsDataURL(selectedFile);
    }
    setTimeout(async () => {
      themeSecundary.setImg(imageElementSec.src);
      themeSecundary.getAverageColor();
    }, 100);


  
  });

</script>
